<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CatsLove_Me</title>
    <description>My personal blog where I cover diffrent topics in Computing.
</description>
    <link>http://catslove.me/</link>
    <atom:link href="http://catslove.me/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 03 Jul 2016 19:35:19 -0400</pubDate>
    <lastBuildDate>Sun, 03 Jul 2016 19:35:19 -0400</lastBuildDate>
    <generator>Jekyll v3.1.0</generator>
    
      <item>
        <title>What is in the Github Student Developer Pack and How Can I Use It?</title>
        <description>&lt;h1&gt;Pack Overview&lt;/h1&gt;

&lt;p&gt;The Github Student Developer Pack [GSDP] includes plenty of great tools for any young programmer or college student. Hopefully this overview should give you a good idea on how to get started using this pack. There are still a few products that I haven&amp;#39;t figured out yet. Give me some time and hopefully by the time you come back to this post they will be filled out.&lt;/p&gt;

&lt;p&gt;I’ll start with the more basic tools first.&lt;/p&gt;

&lt;h4&gt;Atom:&lt;/h4&gt;

&lt;p&gt;A free, customizable, and versatile text editor that can be used virtually on every OS and for any textfile. This doesn’t seem too spiffy at first if you have a favorite IDE for every language, but where Atom really shines is when you have an awkward file type to work with and the only option you have is to open notepad/notepad++/sublime text. It is an extendable and moddable text editor. I use it to write these markdown-based blog posts and for some of the tutorials on this blog I will be using Atom.&lt;/p&gt;

&lt;h4&gt;Namecheap:&lt;/h4&gt;

&lt;p&gt;Namecheap is a domain registrar/web hosting company. In the pack they will provide you with two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A one year .me domain registration&lt;/li&gt;
&lt;li&gt;A one year SSL certificate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this domain you are one step closer to owning your own website. You will still need some place to host your site. By default Namecheap will provide two options: you can either host it on Github pages (recommended) or an about.me Premium page. Of course there is one more option and that is to find another hosting provider (such as DigitalOcean or Amazon Web Services).&lt;/p&gt;

&lt;h4&gt;HackHands:&lt;/h4&gt;

&lt;p&gt;Ever get stuck on a bug in a personal project and there was no one in sight to help? Well whether you are stuck at 2:00pm or 3:00am, HackHands is here to help! In this pack HackHands will grant you $25 in platform credits so you can live access to an expert to help you on your project or &lt;em&gt;cough&lt;/em&gt; &lt;em&gt;cough&lt;/em&gt; homework (but you should probably go meet with your professor instead). Of course if you don’t need the help because you are already an expert programmer you could always sign up as a helper to earn money in your spare time.&lt;/p&gt;

&lt;h4&gt;Visual Studio:&lt;/h4&gt;

&lt;p&gt;Visual Studio is an IDE (Integrated Development Environment) created by Microsoft. Out of the box, Visual Studio can be used to create C, C++, C#, Visual Basic, and ASP.NET code. There are many different versions of visual studio and this developer pack will give you access to the already free Community Edition. If your school is listed as a DreamSpark Premium school, then you will be able to access the Professional version of Visual Studio for free. Visual Studio is not the only product you can get through DreamSpark/DreamSpark Premium. To learn more about the DreamSpark program visit their website.&lt;/p&gt;

&lt;h4&gt;DigitalOcean:&lt;/h4&gt;

&lt;p&gt;Now we start to get to the exciting bits. With Digital Ocean you can get access to your own virtual server in the cloud. With the [GSDP] you get $50 in credits to use however you wish. You can create a game server or a web server or just use it to temporary host a project. You are charged hourly and only when your server is active.&lt;/p&gt;

&lt;h4&gt;AWS Educate:&lt;/h4&gt;

&lt;p&gt;Amazon Web Services Educate is a student program that attempts to provide students with cloud computers and resources for learning how to use AWS. Some of the learning resources they provide are video lectures and notes from other universities. As a student I found the educational side of AWS to be lacking because there are better videos and resources on how to use AWS that can be found by Google. Also AWS currently doesn’t provide an efficient way to navigate through uploaded tutorials. But the credits for AWS are extremely useful! Not only will you get credits (which can vary in amount depending on the institution), but you should also automatically qualify for AWS Free Tier; which is a program that includes free tier services for 12 months after your sign-up date. More information can be found on AWS website. Like Digital Ocean AWS is charged hourly and can also be used to host servers such as web servers and game servers. But as we will discuss later, Digital Ocean is currently a much better option for running a game server than AWS.&lt;/p&gt;

&lt;h4&gt;SendGrid:&lt;/h4&gt;

&lt;p&gt;SendGrid is a service that allows you to send emails in bulk. This service is necessary if you need to send confirmation emails for signing up for a service or emails to advertise your product. You will get 15k free emails/month, which should be  enough to get a product of yours started and will certainly be enough if you want to play around with SendGrid. What I really like about this offer is that you keep this service while you are a student so it won’t expire after just a year.&lt;/p&gt;

&lt;h4&gt;stripe:&lt;/h4&gt;

&lt;p&gt;Stripe is a payment processer that can accept payments from everywhere. If you need a payment processor included in an application than stripe will be the payment processor for you! Stripe’s API can be used with a variety of programming languages such as Java, Python, PHP, Ruby and more. With the [GSDP], Stripe will waive transaction fees on the first $1,000 of revenue.&lt;/p&gt;

&lt;h4&gt;CrowdFlower:&lt;/h4&gt;

&lt;p&gt;First I thought that CrowdFlower was going to be a crowd-funding campaign website just because of its name. I was wrong. CrowdFlower is a “data enrichment platform”. It is a place where you can upload a set of data and have it tailored the way you like it. It can be used for transcription, data collection, content moderation and much more.&lt;/p&gt;

&lt;h4&gt;Travis Cl:&lt;/h4&gt;

&lt;p&gt;Travis CI is a build automation tool that interacts with your GitHub repos. It is free for open source projects, but for private repos there is a fee. In this pack you will get free private builds while you are a student. Travis will do a build every time you push your code and will spot bugs that you may have missed in the process.&lt;/p&gt;

&lt;h4&gt;Unreal Engine:&lt;/h4&gt;

&lt;p&gt;A really amazing game engine. Unreal Engine is already free for developers, so there shouldn’t be much of a surprise that it is on this list. It can be daunting when getting started. But not because of the lack of resources, but because of the amount of tools and skills required.&lt;/p&gt;

&lt;h3&gt;Products that I am still uncertain of:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;dnsimple&lt;/li&gt;
&lt;li&gt;Orchestrate&lt;/li&gt;
&lt;li&gt;Bitnami&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully this brief explanation of each product has helped you. If there is anything that I have learned in this process is that tech services’ websites do a terrible job explaining &lt;strong&gt;WHAT&lt;/strong&gt; they do and &lt;strong&gt;WHY&lt;/strong&gt; you need them. For me, the most obscure ones were dnsimple, Travis CL, Orchestrate, CrowdFlower, and Bitnami. My main goal is to be able to use all of these technologies and report on this blog examples on how to use them to the fullest so I can save other’s time. For some of these tools (AWS, Namecheap, GithubPages) there are plenty resources on how to use them that are easy to access, but for other services/products they are a little bit harder to find.&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Feb 2016 18:43:00 -0500</pubDate>
        <link>http://catslove.me/2016/02/13/what-is-in-the-github-student-developer-pack-and-how-can-i-use-it.html</link>
        <guid isPermaLink="true">http://catslove.me/2016/02/13/what-is-in-the-github-student-developer-pack-and-how-can-i-use-it.html</guid>
        
        
      </item>
    
      <item>
        <title>Part Two: Setting Up GitHub Pages and Namecheap</title>
        <description>&lt;blockquote&gt;
&lt;p&gt;This post is going to assume that you have already set up a Namecheap account using your GitHub Student Developer pack and picked out a fancy domain name for yourself. So even though this post is labeled as &amp;quot;Part Two”, please realize that I did not provide a &amp;quot;Part 1&amp;quot; because I thought that part one (“Setting up your Namecheap Account”) was straight forward enough to skip.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After you created your free .me domain from Namecheap and you opted in for free GitHub Pages hosting, then your Github account should have a new repository. This repository should look pretty bland with only a &lt;code&gt;README.md&lt;/code&gt; file visible. But you should notice that there are two branches: &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/postimg/4.png&quot; class=&quot;image postimg image left&quot; alt=&quot;Github Branches&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The gh-pages branch will contain anything pertaining to your website. Navigate to the gh-pages branch and add a new file. Name the file &lt;code&gt;CNAME&lt;/code&gt; and type in the domain name you received from Namecheap (for me this was “catslove.me”).&lt;/p&gt;

&lt;p&gt;Commit the changes and navigate back to the gh-pages branch and click on “Settings”. Scroll down to the “GitHub Pages” section and you should see a green checkmark next to, “Your site is published at http://(insert domain name here).”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/postimg/gitpagescheck.png&quot; class=&quot;image postimg&quot; alt=&quot;GitHub Pages Checkmark&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you don’t see this then go to the troubleshooting section below. Now let’s go ahead and create your first HTML page. In the gh-pages branch add a new file, we will name it index.html, and add the following text:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hi! This is my first page!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;I love cats!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Commit changes and go visit your domain. Congratulations! You should now see some text on your webpage.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Using GitHub’s Automatic Page Generator:&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/postimg/githubsitebuilder.png&quot; class=&quot;image postimg&quot; alt=&quot;GitHub Pages Site Generator Example&quot; /&gt;
Whether or not you enjoy deckin’ out webpages, I suggest that you try out GitHub’s automatic page generator just for fun and experience. To use GitHub’s automatic page generator just go to your repository, click on “Settings”, and scroll back down to the “GitHub Pages” area. Click “Launch automatic page generator” and walk through the steps. In the generator you can give your page a name and select a layout. When you complete the process go check it out on your now spiffy domain. If you decide you don’t like the site, then you can always roll back changes or delete everything except the &lt;code&gt;CMAKE&lt;/code&gt; file in the gh-pages branch.&lt;/p&gt;

&lt;h2&gt;What Now?&lt;/h2&gt;

&lt;p&gt;If you are satisfied with GitHub pages as it is, then you can go ahead and create your own website. GitHub pages should work with any non-server side languages. If you are interested in having a blog, and not just a static website for free though, then you have a few options. One option is to continue using GitHub as your site host and set up Jekyll to work with GitHub pages. The other option is to pick one of the cloud computing platforms that was included in the Student Developer Pack (such as Digital Ocean or Amazon Web Services), launch a server, install and configure a blogging platform such as Wordpress, and hook up your domain to your server. Both of these options will be covered on this blog and both options have their own pros and cons.&lt;/p&gt;

&lt;h2&gt;Troubleshooting:&lt;/h2&gt;

&lt;p&gt;If you selected the GitHub pages option when you received your domain name then Namecheap should have set everything up for you on their side. Otherwise you might have to manually set up this step. Go to Namecheap.com and sign in to your account. You should be taken to your Namecheap dashboard. Click on Domain List and you should see a list of your domains. Click on the manage button next to the domain you just created and go to the &amp;quot;Advance DNS&amp;quot; tab. Make sure you have the following listed:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;A Record      @     192.30.252.153  30 mins
A Record      @     192.30.252.154  30 mins
CNAME Record  www   catslove.me     30 mins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don&amp;#39;t have the first two listed go ahead and add them now, as they are required to link up to GitHub Page&amp;#39;s hosting. Not having records listed is one of the most common issues when it comes to your website not being hooked up correctly. When you add these records make sure you give the DNS 24 hours to sync.&lt;/p&gt;

&lt;p&gt;If you already have these records added and you still can&amp;#39;t get your website hosted correctly you should go ahead and contact Namecheap support.&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jan 2016 19:02:00 -0500</pubDate>
        <link>http://catslove.me/githubpages/namecheap/web/2016/01/28/setting-up-github-pages-and-namecheap.html</link>
        <guid isPermaLink="true">http://catslove.me/githubpages/namecheap/web/2016/01/28/setting-up-github-pages-and-namecheap.html</guid>
        
        <category>githubpages</category>
        
        <category>namecheap</category>
        
        <category>web</category>
        
        
        <category>githubpages</category>
        
        <category>namecheap</category>
        
        <category>web</category>
        
      </item>
    
  </channel>
</rss>
